import sys

print('{0:10}={1:10}'.format('spam', 123.4567))
# spam      =  123.4567
print('{0:>10}={1:<10}'.format('spam', 123.4567))
#       spam=123.4567
print('{0.platform:>10}={1[kind]:<10}'.format(sys, dict(kind='laptop')))
#      win32=laptop

# Можно иначе:
print('{:10}={:10}'.format('spam', 123.4567))
# spam      =  123.4567
print('{:>10}={:<10}'.format('spam', 123.4567))
#       spam=123.4567
print('{.platform:>10}={[kind]:<10}'.format(sys, dict(kind='laptop')))
#      win32=laptop

print('{0:e}, {1:.3e}, {2:g}'.format(3.14159, 3.14159, 3.14159))
# 3.141590e+00, 3.142e+00, 3.14159
print('{0:f}, {1:.2f}, {2:06.2f}'.format(3.14159, 3.14159, 3.14159))
# 3.141590, 3.14, 003.14
# Шестнадцатеричный, восьмеричный, двоичный
print('{0:X}, {1:o}, {2:b}'.format(255, 255, 255))
# FF, 377, 11111111
print('{0:.2f}'.format(1/3.0))  # Жестко закодированные параметры
# 0.33
print('%.2f' % (1/3.0))  # То же самое для выражения
# 0.33
print('{0:.{1}f}'.format(1/3.0, 4))  # Получение значений из аргументов
# 0.3333
print('%.*f' % (4, 1/3.0))  # То же самое для выражения
# 0.3333

print('{0:.2f}'.format(1.2345))  # Строковый метод
# 1.23
print(format(1.2345, '.2f'))  # Встроенная функция
# 1.23
print('%.2f' % 1.2345)  # Выражение
# 1.23


